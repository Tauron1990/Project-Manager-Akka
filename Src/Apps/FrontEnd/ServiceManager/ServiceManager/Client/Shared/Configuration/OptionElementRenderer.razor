@if (Element.Error)
{
    <MudAlert Severity="Severity.Error">@Element.Message</MudAlert>
}
else
{
    <div>
        <table>
            @foreach (var option in Element.ConfigOptions)
            {
                <tr @key="@option.Path">
                    <td>
                        <MudText Class="ma-3">@(option.Path):</MudText>
                    </td>
                    <td class="d-flex">
                        <MudTextFieldString Class="my-n3 mx-1 d-inline-flex" Style="width: 40vw" @bind-Text="@option.CurrentValue"/>
                        <MudButton Class="ma-1 d-inline-flex" OnClick="@(async () => await SendOption(option))">Einfügen</MudButton>
                    </td>
                </tr>
            }
        </table>
    </div>
}


@code {

    [Parameter]
    public EventCallback<OptionSelected> OptionSelected { get; set; }

    [Parameter]
    public ConfigurationOptionsViewModel.OptionElement Element { get; set; } = ConfigurationOptionsViewModel.DefaultElement;

    private async Task SendOption(ConfigurationOptionsViewModel.MutableConfigOption option) 
        => await OptionSelected.InvokeAsync(new OptionSelected(option.Path, option.CurrentValue));
}