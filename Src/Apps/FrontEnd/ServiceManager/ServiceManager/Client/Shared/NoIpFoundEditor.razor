@using ServiceManager.Shared
@using Tauron.Application
@using ServiceManager.Client.ViewModels.Models
@inject IAppIpManager _appIpManager
@inject IServerInfo _applicationLifetime
@inject IEventAggregator _eventAggregator;

<MudContainer MaxWidth="MaxWidth.Small">
    <MudText Typo="Typo.h4" Class="ma-4"> Ip Adresse Bebaeiten </MudText>
    <MudTextFieldString @bind-Value="_ipContent" Label="Ip" Class="ma-4"/>
    <MudButton OnClick="Restart" Class="ma-4">Anwenden und Neustarten</MudButton>
</MudContainer>

@code {
    private string _ipContent = string.Empty;

    private async Task Restart()
    {
        var result = await _appIpManager.WriteIp(new WriteIpCommand(_ipContent));
        if (string.IsNullOrWhiteSpace(result))
            await _applicationLifetime.Restart(new RestartCommand());
        else
            _eventAggregator.PublishMessage(new SnackbarErrorMessage(result));
    }

}