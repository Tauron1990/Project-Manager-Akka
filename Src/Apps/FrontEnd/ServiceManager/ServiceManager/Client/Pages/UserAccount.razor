@page "/User"


@using ServiceManager.Shared.Identity
@using ServiceManager.Client.Shared.UserAccount
@inherits ComputedStateComponent<bool>
@layout UserAccountLayout

@inject IUserManagement _management

@* ReSharper disable once Html.TagShouldNotBeSelfClosed *@
@if (_authState == null)
{
    <Title Value="Service Manager - Benutzer"/>
}
else
{
    @* ReSharper disable once Html.TagShouldNotBeSelfClosed *@
    <Title Value="@($"Service Manager - {_authState.User.Name}")"/>
}

<StateAwaiter State="State">
    @if (context)
    {
        <UserAccountsSetupView/>
    }
    else if (_authState == null || _authState.User == null || !_authState.User.IsAuthenticated())
    {
        <LoginRegisterView/>
    }
    else
    {
        <UserEditorView/>
    }
</StateAwaiter>

@code {

    [CascadingParameter]
    public Task<AuthState>? AuthStateTask { get; set; }

    private AuthState? _authState;

    protected override Task<bool> ComputeState(CancellationToken cancellationToken)
        => _management.NeedSetup(cancellationToken);

    protected override async Task OnParametersSetAsync()
    {
        if (AuthStateTask != null)
            _authState = await AuthStateTask;

        await base.OnParametersSetAsync();
    }

}