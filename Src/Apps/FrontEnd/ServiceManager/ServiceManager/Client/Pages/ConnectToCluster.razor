@page "/ConnectToCluster"
@using ServiceManager.Shared.Identity

@inject ConnectToClusterViewModel _model

<Title Value="Service Manager - Mit Cluster Verbinden"/>

<GenericAuthorizeView Claims="new []{Claims.ServerInfoClaim, Claims.ClusterConnectionClaim}">
    <MudContainer MaxWidth="MaxWidth.Medium">
        <OperationHost Manager="_model.Operation">
            <MudCard Class="mx-auto">
                <MudCardHeader>
                    <MudText Typo="Typo.h3">Mit Bestehenden Cluster Verbinden</MudText>
                </MudCardHeader>
                <MudCardContent>
                    <MudForm @bind-IsValid="_isValid">
                        <MudTextFieldString Validation="_model.ValidateUrl" @ref="_urlField" Value="@_model.ClusterUrl"></MudTextFieldString>
                    </MudForm>
                </MudCardContent>
                <MudCardActions>
                    <MudButton Disabled="@(!_isValid)" OnClick="_model.ConnectToCluster">Verbinden</MudButton>
                </MudCardActions>
            </MudCard>
        </OperationHost>
    </MudContainer>
</GenericAuthorizeView>

@code {
    private MudTextFieldString? _urlField;

    private bool _isValid;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if(_urlField != null)
            await _urlField.Validate();
        await base.OnAfterRenderAsync(firstRender);
    }
}
