//------------------------------------------------------------------------------
// <auto-generated>
//     Dieser Code wurde von einem Tool generiert.
//     Laufzeitversion:4.0.30319.42000
//
//     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
//     der Code erneut generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ServiceManager.Server.Properties {
    using System;
    
    
    /// <summary>
    ///   Eine stark typisierte Ressourcenklasse zum Suchen von lokalisierten Zeichenfolgen usw.
    /// </summary>
    // Diese Klasse wurde von der StronglyTypedResourceBuilder automatisch generiert
    // -Klasse über ein Tool wie ResGen oder Visual Studio automatisch generiert.
    // Um einen Member hinzuzufügen oder zu entfernen, bearbeiten Sie die .ResX-Datei und führen dann ResGen
    // mit der /str-Option erneut aus, oder Sie erstellen Ihr VS-Projekt neu.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "16.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Gibt die zwischengespeicherte ResourceManager-Instanz zurück, die von dieser Klasse verwendet wird.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ServiceManager.Server.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Überschreibt die CurrentUICulture-Eigenschaft des aktuellen Threads für alle
        ///   Ressourcenzuordnungen, die diese stark typisierte Ressourcenklasse verwenden.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die ####################################
        ///# Akka Actor Reference Config File #
        ///####################################
        ///
        ///# This is the reference config file that contains all the default settings.
        ///# Make your edits/overrides in your application.conf.
        ///
        ///akka {
        ///  # Loggers are created and registered synchronously during ActorSystem
        ///  # start-up, and since they are actors, this timeout is used to bound the
        ///  # waiting time
        ///  logger-startup-timeout = 5s
        ///
        ///  # You can enable asynchronous loggers creation by se [Rest der Zeichenfolge wurde abgeschnitten]&quot;; ähnelt.
        /// </summary>
        internal static string Akka {
            get {
                return ResourceManager.GetString("Akka", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die #####################################
        ///# Akka Cluster Reference Config File #
        ///######################################
        ///
        ///# This is the reference config file that contains all the default settings.
        ///# Make your edits/overrides in your application.conf.
        ///
        ///akka {
        ///
        ///  cluster {
        ///
        ///    # How long to wait for one of the seed nodes to reply to initial join request.
        ///    # When this is the first seed node and there is no positive reply from the other
        ///    # seed nodes within this timeout it will join itself to bo [Rest der Zeichenfolge wurde abgeschnitten]&quot;; ähnelt.
        /// </summary>
        internal static string AkkaCluster {
            get {
                return ResourceManager.GetString("AkkaCluster", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die ###########################################################
        ///# Akka Persistence Extension Reference Configuration File #
        ///###########################################################
        ///
        ///# This is the reference config file that contains all the default settings.
        ///# Make your edits in your application.conf in order to override these settings.
        ///
        ///# Directory of persistence journal and snapshot store plugins is available at the
        ///# Akka.NET Community Projects page http://getakka.net/docs/Community%20Plugins
        ///
        ///#  [Rest der Zeichenfolge wurde abgeschnitten]&quot;; ähnelt.
        /// </summary>
        internal static string AkkaPersistence {
            get {
                return ResourceManager.GetString("AkkaPersistence", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die #####################################
        ///# Akka Remote Reference Config File #
        ///#####################################
        ///
        ///# This is the reference config file that contains all the default settings.
        ///# Make your edits/overrides in your application.conf.
        ///
        ///# comments about akka.actor settings left out where they are already in akka-
        ///# actor.jar, because otherwise they would be repeated in config rendering.
        ///
        ///akka {
        ///
        ///  actor {
        ///
        ///    deployment {
        ///
        ///      default {
        ///
        ///        # if this is set to a valid remo [Rest der Zeichenfolge wurde abgeschnitten]&quot;; ähnelt.
        /// </summary>
        internal static string AkkaRemote {
            get {
                return ResourceManager.GetString("AkkaRemote", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die #####################################
        ///# Akka Stream Reference Config File #
        ///#####################################
        ///
        ///akka {
        ///  stream {
        ///
        ///    # Default flow materializer settings
        ///    materializer {
        ///
        ///      # Initial size of buffers used in stream elements
        ///	  # Note: If you change this value also change the fallback value in ActorMaterializerSettings
        ///      initial-input-buffer-size = 4
        ///
        ///      # Maximum size of buffers used in stream elements
        ///	  # Note: If you change this value also change the fallb [Rest der Zeichenfolge wurde abgeschnitten]&quot;; ähnelt.
        /// </summary>
        internal static string AkkaStreams {
            get {
                return ResourceManager.GetString("AkkaStreams", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die akka.persistence {
        ///	journal {
        ///		mongodb {
        ///			# qualified type name of the MongoDb persistence journal actor
        ///			class = &quot;Akka.Persistence.MongoDb.Journal.MongoDbJournal, Akka.Persistence.MongoDb&quot;
        ///
        ///			# connection string used for database access
        ///			connection-string = &quot;&quot;
        ///
        ///			# should corresponding journal table&apos;s indexes be initialized automatically
        ///			auto-initialize = on
        ///
        ///			# dispatcher used to drive journal actor
        ///			plugin-dispatcher = &quot;akka.actor.default-dispatcher&quot;
        ///
        ///			# MongoDb collectio [Rest der Zeichenfolge wurde abgeschnitten]&quot;; ähnelt.
        /// </summary>
        internal static string BaseConfig {
            get {
                return ResourceManager.GetString("BaseConfig", resourceCulture);
            }
        }
    }
}
