akka 
{
	persistence {
		journal {
			mongoRead{
				class = "Akka.Persistence.MongoDb.Query.MongoDbReadJournalProvider, Akka.Persistence.MongoDb"
				write-plugin = "akka.persistence.journal.mongodb"
				max-buffer-size = 500
				refresh-interval = 3s
			}
		plugin = "akka.persistence.journal.mongodb"
			mongodb {
				# qualified type name of the MongoDb persistence journal actor
				class = "Akka.Persistence.MongoDb.Journal.MongoDbJournal, Akka.Persistence.MongoDb"

				# connection string used for database access
				 connection-string = "mongodb://192.168.105.96:27017/SimpleProjectManager?readPreference=primary&appname=SimpleProjectManager&directConnection=true&ssl=false"
				# connection-string = "mongodb://localhost:27017/SimpleProjectManager?readPreference=primary&appname=SimpleProjectManager&directConnection=true&ssl=false"

				# should corresponding journal table's indexes be initialized automatically
				auto-initialize = on

				# MongoDb collection corresponding with persistent journal
				collection = "EventJournal"

				# metadata collection
				metadata-collection = "Metadata"

				event-adapters {
        
					aggregate-event-tagger  = "Akkatecture.Events.AggregateEventTagger, Akkatecture"
    
					}
    
					event-adapter-bindings = {
    
						"Akkatecture.Aggregates.ICommittedEvent, Akkatecture" = aggregate-event-tagger
    
					}
				}
			}
		}

		snapshot-store {
		plugin = "akka.persistence.snapshot-store.mongodb"
			mongodb {
				# qualified type name of the MongoDB persistence snapshot actor
				class = "Akka.Persistence.MongoDb.Snapshot.MongoDbSnapshotStore, Akka.Persistence.MongoDb"

				# connection string used for database access
				connection-string = "mongodb://192.168.105.96:27017/SimpleProjectManager?readPreference=primary&appname=SimpleProjectManager&directConnection=true&ssl=false"
				#connection-string = "mongodb://localhost:27017/SimpleProjectManager?readPreference=primary&appname=SimpleProjectManager&directConnection=true&ssl=false"

				# should corresponding snapshot's indexes be initialized automatically
				auto-initialize = on


				# MongoDb collection corresponding with persistent snapshot store
				collection = "SnapshotStore"
			}
		}
	}

    cluster {
        roles = ["Master"]
    }

    appinfo {
        applicationName: "Simple Project Manager",
        actorsystem: "Simple-Project-Manager"
    }

    serviceresolver {
        name = "Simple Project Manager"
    }
}
