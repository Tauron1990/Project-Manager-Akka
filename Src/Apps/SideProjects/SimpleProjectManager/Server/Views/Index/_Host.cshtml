@page
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers

<!DOCTYPE html>
<html lang="de">

<head>
    <title>Einfacher Projekt Manager</title>
    <meta charset="utf-8"/>
    <meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no"/>
    <base href="/"/>
    @*    <link href="css/bootstrap/bootstrap.min.css" rel="stylesheet"/>*@
    <link href="css/app.css" rel="stylesheet"/>
    <link href="SimpleProjectManager.Client.styles.css" rel="stylesheet"/>
    <link href="manifest.json" rel="manifest"/>
    <link rel="apple-touch-icon" sizes="512x512" href="icon-512.png"/>
    <link rel="apple-touch-icon" sizes="192x192" href="icon-192.png"/>

    <link href="_content/MudBlazor/MudBlazor.min.css" rel="stylesheet"/>
    <link href="css/Fonts.css" rel="stylesheet"/>
    @*<link href="_content/GridBlazor/css/gridblazor.min.css" rel="stylesheet"/>

    <script src="_content/GridBlazor/js/gridblazor.js"></script>*@

    <script src="_content/MudBlazor/MudBlazor.min.js"></script>
    <script src="dist/bundle.js"></script>
</head>

<body>

<noscript>
    JavaScript ist zum betrieb der Webseite erfordelich!
</noscript>

@*
<div id="app">Loading...</div>
*@

<div id="app">
    <div class="loading-grid-container">
        <div class="loading-Text1">
            <h1>Einfacher Job Manager</h1>
        </div>
        <div class="loading-Text2">
            <p>Anwendung wird gestartet</p>
        </div>
        <div class="loading-loadingBa1 loading-progress-bar" style="width: 0%"
             role="progressbar" id="loading-progressbar">
        </div>
    </div>
</div>

<div id="blazor-error-ui" style="background: black">
    An unhandled error has occurred.
    <a href="" class="reload">Reload</a>
    <a class="dismiss">🗙</a>
</div>
<script src="_framework/blazor.webassembly.js" autostart="false"></script>
<script>
        var i = 0;
        var allResourcesBeingLoaded = [];
        Blazor.start({ // start manually with loadBootResource
            loadBootResource: function (type, name, defaultUri, integrity) {
                if (type == "dotnetjs")
                    return defaultUri;

                var fetchResources = fetch(defaultUri, {
                    cache: 'no-cache',
                    integrity: integrity,
                    @*headers: { 'MyCustomHeader': 'My custom value' }*@
                });
           

                allResourcesBeingLoaded.push(fetchResources);
                fetchResources.then((r) => {
                    i++;
                    var total = allResourcesBeingLoaded.length;    
                    var progressbar = document.getElementById('loading-progressbar');
                    var value = parseInt((i * 100.0) / total);
                    var pct = value + '%';
                    progressbar.style.width = pct;
                    console.info(i + '/' + total + ' (' + pct + ') ' + name);
                });
                return fetchResources;
            }
        });
    </script>
<script>navigator.serviceWorker.register('service-worker.js');</script>
</body>

</html>