@page "/CurrentJobs"
@page "/CurrentJobs/{PreSelected}"
@using SimpleProjectManager.Client.Shared.Data
@using SimpleProjectManager.Client.Shared.CurrentJobs
@inherits NonAutoRenderingView<SimpleProjectManager.Client.Shared.ViewModels.Pages.CurrentJobsViewModel>

@inject IJSRuntime JsRuntime
@inject GlobalState GlobalState 
@inject IEventAggregator EventAggregator

<PageTitle>Aktuelle Aufträge</PageTitle>

<ObservableRenderer Observable="@ViewModel?.Jobs">
    <Waiting>
        <GenericLoadingElement Label="Daten werden Abgerufen"/>
    </Waiting>
    <ValueRenderer>
        @if(context.Length == 0)
        {
            <MudGrid Justify="Justify.Center">
                <MudItem lg="12">
                    <MudText Align="Align.Center" Typo="Typo.h2">Keine Aufträge</MudText>
                </MudItem>
                <MudItem lg="5"/>
                <MudItem lg="2">
                    <MudCommandButton StartIcon="@Icons.Material.Filled.NewLabel" Class="align-center" @ref="NewJob">Neuer Auftrag</MudCommandButton>
                </MudItem>
                <MudItem lg="5"/>
            </MudGrid>
        }
        else
        {
            <MudGrid>
                <MudItem lg="3">
                    <JobSideBar/>
                </MudItem>
                <MudItem lg="9">
                    <JobDetailDisplay/>
                </MudItem>
            </MudGrid>
        }
    </ValueRenderer>
    <OnCompled>
        <GenericStreamError/>
    </OnCompled>
</ObservableRenderer>