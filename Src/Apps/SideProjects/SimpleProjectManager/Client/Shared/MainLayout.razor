@inherits LayoutComponentBase

@implements IDisposable

@inject IEventAggregator _aggregator;
@inject ISnackbar _snackbar;

<MudThemeProvider Theme="_darkTheme"/>
<MudDialogProvider />
<MudSnackbarProvider />

<MudLayout>
    <MudAppBar Elevation="4" Dense="true">
        <MudIconButton Icon="@Icons.Material.Filled.Menu" Color="Color.Inherit" Edge="Edge.Start" OnClick="@ToggleDrawer"/>
        <MudSpacer/>
    </MudAppBar>
    <MudDrawer Open="@_open" Elevation="4" Variant="DrawerVariant.Responsive" ClipMode="DrawerClipMode.Always">
        <MudDrawerHeader>Simple Project Manager</MudDrawerHeader>
        <NavMenu/>
    </MudDrawer>
    <MudMainContent>
        <MudContainer Fixed="true" Class="mt-2">
            @Body
        </MudContainer>
    </MudMainContent>
</MudLayout>

@code
{
    bool _open;
    

    void ToggleDrawer() => _open = !_open;

    private readonly MudTheme _darkTheme =
        new()
        {
            Palette = new Palette()
                      {
                          Primary = "#776be7",
                          Black = "#27272f",
                          Background = "#32333d",
                          BackgroundGrey = "#27272f",
                          Surface = "#373740",
                          DrawerBackground = "#27272f",
                          DrawerText = "rgba(255,255,255, 0.50)",
                          DrawerIcon = "rgba(255,255,255, 0.50)",
                          AppbarBackground = "#27272f",
                          AppbarText = "rgba(255,255,255, 0.70)",
                          TextPrimary = "rgba(255,255,255, 0.70)",
                          TextSecondary = "rgba(255,255,255, 0.50)",
                          ActionDefault = "#adadb1",
                          ActionDisabled = "rgba(255,255,255, 0.26)",
                          ActionDisabledBackground = "rgba(255,255,255, 0.12)",
                          Divider = "rgba(255,255,255, 0.12)",
                          DividerLight = "rgba(255,255,255, 0.06)",
                          TableLines = "rgba(255,255,255, 0.12)",
                          LinesDefault = "rgba(255,255,255, 0.12)",
                          LinesInputs = "rgba(255,255,255, 0.3)",
                          TextDisabled = "rgba(255,255,255, 0.2)",
                          Info = "#3299ff",
                          Success = "#0bba83",
                          Warning = "#ffa800",
                          Error = "#f64e62",
                          Dark = "#27272f"
                      }
        };

    private IDisposable _subscription = System.Reactive.Disposables.Disposable.Empty;

    protected override void OnInitialized()
    {
        _subscription = _aggregator.GetEvent<AggregateEvent<SnackbarMessage>, SnackbarMessage>().Get().Subscribe(m => m.Apply(_snackbar));
        base.OnInitialized();
    }

    public void Dispose()
        => _subscription.Dispose();
}
