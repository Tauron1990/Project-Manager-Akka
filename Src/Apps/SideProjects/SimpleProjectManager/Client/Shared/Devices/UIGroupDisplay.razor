@using SimpleProjectManager.Shared.Services.Devices
@if(UiGroup is not null)
{
    @switch (UiGroup.Type)
    {
        case UIType.Button:
            <SingleButtonDisplay Button="DeviceUi.ToButton(UiGroup)" DeviceId="DeviceId"/>
            break;
        case UIType.Tab:
            <MudTabs Elevation="2" Rounded="true" ApplyEffectsToContainer="true" PanelClass="pa-6">
                @foreach (var tabItem in UiGroup.Ui)
                {
                    <MudTabPanel @key="tabItem.Id.Value" Text="@tabItem.Name.Value">
                        <UIGroupDisplayCarrier UiGroup="tabItem" DeviceId="DeviceId"/> 
                    </MudTabPanel>
                }
            </MudTabs>
            break;
        case UIType.GroupVertical:
            @if(ShowCategory)
            {
                <MudItem lg="12">
                    <MudText Typo="Typo.h4">@UiGroup.Name</MudText>
                </MudItem>
            }
            <MudGrid>
                @foreach (var group in UiGroup.Ui)
                {
                    <MudItem lg="12">
                        <UIGroupDisplayCarrier UiGroup="group" DeviceId="DeviceId"/>
                    </MudItem>
                }
            </MudGrid>
        break;
        case UIType.Group:
            <MudGrid>
                @if(ShowCategory)
                {
                    <MudItem lg="12">
                        <MudText Typo="Typo.h4">@UiGroup.Name</MudText>
                    </MudItem>
                }
                @foreach (var group in GroupToThree(UiGroup.Ui))
                {
                    @switch (group.List.Count)
                    {
                        case 2:
                        {
                            DeviceUiGroup element1 = group.List[0];
                            DeviceUiGroup element2 = group.List[1];

                            <MudItem @key="element1.Id" lg="6">
                                <UIGroupDisplayCarrier UiGroup="element1" DeviceId="DeviceId"/>
                            </MudItem>
                            <MudItem @key="element2.Id" lg="6">
                                <UIGroupDisplayCarrier UiGroup="element2" DeviceId="DeviceId"/>
                            </MudItem>
                        }
                            break;
                        case 3:
                        {
                            DeviceUiGroup element1 = group.List[0];
                            DeviceUiGroup element2 = group.List[1];
                            DeviceUiGroup element3 = group.List[2];

                            <MudItem @key="element1.Id" lg="4">
                                <UIGroupDisplayCarrier UiGroup="element1" DeviceId="DeviceId"/>
                            </MudItem>
                            <MudItem @key="element2.Id" lg="4">
                                <UIGroupDisplayCarrier UiGroup="element2" DeviceId="DeviceId"/>
                            </MudItem>
                            <MudItem @key="element3.Id" lg="4">
                                <UIGroupDisplayCarrier UiGroup="element3" DeviceId="DeviceId"/>
                            </MudItem>
                        }
                            break;
                        default:
                            @foreach (var element in group.List)
                            {
                                <MudItem @key="element.Id" lg="12">
                                    <UIGroupDisplayCarrier UiGroup="element" DeviceId="DeviceId"/>
                                </MudItem>
                            }
                            break;
                    }
                }
            </MudGrid>
            break;
        case UIType.SensorString:
        case UIType.SensorDouble:
        case UIType.SensorNumber:
            <SingleSensorDisplay Sensor="DeviceUi.ToSensor(UiGroup)" DeviceId="DeviceId"/>
            break;
        case UIType.Text:
            <MudText>@UiGroup.Name.Value</MudText>
            break;
        default:
            <MudText>Unbekannter UI Type</MudText>
            break;
    }
}
else
{
    <MudText>Keine Gruppe Zur Verfügung gestellet</MudText>
}