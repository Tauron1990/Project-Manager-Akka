@inherits NonAutoRenderingView<FileUploaderViewModel>

@if (ViewModel != null)
{
    <MudGrid>
        <MudItem lg="12">
            <MudText Align="Align.Center">Hochladen von PDF, Zip und Tiff datein zum Server</MudText>
        </MudItem>
        <MudItem lg="12">
            <MudGrid Justify="Justify.Center">
                <MudItem lg="3"/>
                <MudItem lg="6">
                    <MudTextField Label="Job Name:" @bind-Value="ViewModel.ProjectId" DebounceInterval="100" Validation="@ViewModel.ValidateName"/>
                </MudItem>
                <MudItem lg="3"/>
            </MudGrid>
        </MudItem>
        <MudItem lg="12">
            <MudPaper @ondragenter="@(() => _dragEnterStyle = "drag-enter")"
                      @ondragleave="@(() => _dragEnterStyle = null)"
                      @ondragend="@(() => _dragEnterStyle = null)"
                      Class=@("drag-drop-zone " + _dragEnterStyle)>

                <InputFile OnChange="ViewModel.FilesChanged" multiple class="drag-drop-input" disabled="@ViewModel.ShouldDisable"/>

                <ObservableCollectionView SourceParameter="ViewModel.Files">
                    <EmptyRender>
                        <MudText Typo="Typo.h3">Drag and Drop oder Klicken zum hinzufügen</MudText>
                    </EmptyRender>
                    <ListRender>
                        <MudList Style="padding:2em;width:100%;" Dense="true">
                            @foreach (var file in context)
                            {
                                <MudListItem @key="@file.Name">
                                    <MudChip Color="Color.Dark"
                                             Style="width:60px; overflow:hidden;"
                                             Text="@(file.Name.Split(".").Last())"/>
                                    <MudText>@file.Name</MudText>
                                    @if (file.UploadState != UploadState.Pending)
                                    {
                                        @if (file.UploadState == UploadState.Uploading)
                                        {
                                            <MudText Class="ml-1">Hochladen</MudText>
                                        }
                                        else
                                        {
                                            <MudText Class="ml-1">Fertig</MudText>
                                        }
                                    }
                                </MudListItem>
                            }
                        </MudList>
                    </ListRender>
                </ObservableCollectionView>
            </MudPaper>
        </MudItem>
        <MudItem lg="12">
            <MudGrid Justify="Justify.Center" Spacing="4">
                <MudItem>
                    <MudCommandButton @ref="Upload" Color="Color.Primary" Variant="Variant.Filled">Hochladen</MudCommandButton>
                </MudItem>
                <MudItem>
                    <MudCommandButton @ref="Clear" Color="Color.Error" Variant="Variant.Filled">Löschen</MudCommandButton>
                </MudItem>
            </MudGrid>
        </MudItem>
    </MudGrid>
}


