akka 
{
    extensions = ["Akka.Cluster.Tools.PublishSubscribe.DistributedPubSubExtensionProvider, Akka.Cluster.Tools", 
                  "Akka.Cluster.Tools.Client.ClusterClientReceptionistExtensionProvider, Akka.Cluster.Tools",
                  "Akka.Cluster.Utility.ClusterActorDiscoveryId, Akka.Cluster.Utility"]

    actor.provider = cluster

    persistence {
        journal {
            plugin = "akka.persistence.journal.sqlite"
            sqlite {
            	class = "Akka.Persistence.Sqlite.Journal.SqliteJournal, Akka.Persistence.Sqlite"
			    connection-string = "Data Source=host.db;"
			    auto-initialize = on

                event-adapters {
        
	            aggregate-event-tagger  = "Akkatecture.Events.AggregateEventTagger, Akkatecture"
                }
    
                event-adapter-bindings = {
		            "Akkatecture.Aggregates.ICommittedEvent, Akkatecture" = aggregate-event-tagger
                }
            }
        }

        snapshot-store {
		    plugin = "akka.persistence.snapshot-store.sqlite"
		    sqlite {
            	class = "Akka.Persistence.Sqlite.Snapshot.SqliteSnapshotStore, Akka.Persistence.Sqlite"
			    connection-string = "Data Source=host.db;"
			    auto-initialize = on
		    }
        }
    }

    cluster {
        auto-down-unreachable-after = 1m
        down-removal-margin = 5m
        roles = ["Master"]
    }

    remote {
        dot-netty.tcp {
            port = 0
        }
    }

    serviceresolver {
        isglobal = true
        name = "Master-Node"
    }
}
